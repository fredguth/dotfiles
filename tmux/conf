#---------------------------------------------------------------
# file:     ~/tmux/conf
# author:   jason ryan - http://jasonwryan.com/
# vim:fenc=utf-8:nu:ai:si:et:ts=4:sw=4:fdm=indent:fdn=1:ft=conf:
#---------------------------------------------------------------
# Based on Thayer Williams' (http://cinderwick.ca)
# Modified by perok

# -- General ---------------------------------------------------
# set correct term
set -g default-terminal "screen-256color"
set -g status-utf8 on                     # expect UTF-8
setw -g utf8 on

# zsh is kinda tight
set-option -g default-shell $SHELL

# set prefix key to ctrl+a
unbind C-b
set -g prefix C-a

# environment
set -g update-environment "DISPLAY SSH_ASKPASS SSH_AUTH_SOCK SSH_AGENT_PID SSH_CONNECTION WINDOWID XAUTHORITY"

# allow Vim to recieve modifier keys: Shift, Control, Alt
# set -g xterm-keys on

# prevent tmux from catching modifier keys meant for Vim
# set -s escape-time 1

# -- set vi keys --
# Need to rewrite from arrows to hjkl
setw -g mode-keys vi # Adds vi style search, etc
bind h select-pane -L #http://thedrearlight.com/blog/tmux-vim.html untested
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
#bind-key -r C-h select-window -t :-
#bind-key -r C-l select-window -t :+

# pane selection
bind Left select-pane -L
bind Right select-pane -R
bind Up select-pane -U
bind Down select-pane -D

# -- copy mode ---------------------------------------------

unbind [
bind Escape copy-mode

unbind p
bind p paste-buffer  # Paste from top buffer
bind P choose-buffer # choose which buffer to paste from
# bind b list-buffers  # list paster buffers
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# copy tmux buffer to clipboard
bind C-y run "tmux show-buffer | xsel -b"
# move x clipboard into tmux paste buffer
bind C-p run "tmux set-buffer \"$(xsel -o)\"; tmux paste-buffer"

# -- Mouse interaction -------------------------------------

#Mouse integration (sucks)
#set -g mode-mouse on
#set-option -g mouse-select-pane on
#set-option -g mouse-select-window on
#setw -g mouse-select-window on #untested
#setw -g mouse-select-pane on #untested

# -- pane/window control  -------------------------------------
bind-key C-j command-prompt -p "join pane from:" "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:" "join-pane -t '%%'"
bind-key w command-prompt -p "swap window with:" "swap-window -t ':%%'"
bind-key m command-prompt -p "move window to:" "move-window -t ':%%'"
bind-key , command-prompt -p "rename window to:" "rename-window '%%'"

# ctrl+left/right cycles thru windows
bind-key -n C-right next
bind-key -n C-left prev

# pane resizing. Currently not compatible
# bind -r H resize-pane -L 2
# bind -r J resize-pane -D 2
# bind -r K resize-pane -U 2
# bind -r L resize-pane -R 2

# more intuitive keybindings for splitting
unbind %
bind C-h split-window -v
unbind '"'
bind C-v split-window -h

# -- General key bindings ---------------------------------------------

bind '~' split-window "exec htop" #  quick view of processes

# open {tmux,mutt,vim} man page
bind-key T neww -n "Tmux manual" "exec man tmux"
bind-key V neww -n "Vim manual" "exec vim -c 'h user-manual|only'"

# open %% man page
bind C-m command-prompt -p "Open man page for:" "new-window 'exec man %%'"

# send the prefix to client inside window (ala nested sessions)
#Overrides C-a cursor movement.
bind-key -n C-a send-prefix

#Send C-a a to shell
bind-key a send-prefix

# toggle last window like screen
bind-key C-b last-window

# confirm before killing a window or the server
bind-key C-k confirm kill-window
bind-key K confirm kill-server

# toggle statusbar
bind-key b set-option status

# initialize sessions
bind S source-file $DOTFILES/tmux/standard
bind I source-file $DOTFILES/tmux/irssi

# reload config without killing server
bind R source-file $HOME/.tmux.conf \; display-message "  Config reloaded..".

# -- window behaviour ----------------------------------------
# enable wm window titles
set -g set-titles on

# enable auto renaming
setw -g automatic-rename on

set -g base-index 1 #  start window indexing at one instead of zero
setw -g pane-base-index 1 #  make pane numbering consistent with windows

# scrollback buffer n lines
set -g history-limit 5000

# allow terminal scrolling. Will clear everything from before starting tmux
set-option -g terminal-overrides 'tmux*:smcup@:rmcup@'

# listen for activity on all windows
set -g bell-action any

# on-screen time for display-panes in ms
set -g display-panes-time 2000

# border colours
#set -g pane-border-fg magenta
#set -g pane-active-border-fg magenta
#set -g pane-active-border-bg default

#--------------------------------------------------------------
# statusbar
#--------------------------------------------------------------

# Using tmuxline.vim to automake a powerline for tmux.
if-shell "test -f $DOTFILES/tmux/tmuxline.vim.snapshot" "source $DOTFILES/tmux/tmuxline.vim.snapshot"

# wm window title string (uses statusbar variables)
#set -g set-titles-string "tmux:#I [ #W ]"

#set -g window-status-format "#I:#W"
#set -g window-status-current-format "#I:#W"

#set -g status-keys vi
#bind-key -t vi-edit Up history-up
#bind-key -t vi-edit Down history-down

#set -g status-interval 1
#set -g status-justify centre # center align window list

## default statusbar colors
#set -g status-fg white
#set -g status-bg default

## default window title colors
#set-window-option -g window-status-fg black
#set-window-option -g window-status-bg default
#set-window-option -g window-status-attr bright

## active window title colors
#set-window-option -g window-status-current-fg white
#set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr dim

## bell colours
#set -g window-status-bell-bg default
#set -g window-status-bell-fg red
#set -g window-status-bell-attr bright

## command/message line colors
#set -g message-fg white
#set -g message-bg black
#set -g message-attr bright

# Statusbar starting in X or not
#if '[ -n "$DISPLAY" ]' 'source-file $DOTFILES/tmux/inx'
#if '[ -z "$DISPLAY" ]' 'source-file $DOTFILES/tmux/xless'

#--------------------------------------------------------------
# color
#--------------------------------------------------------------

#source-file $DOTFILES/tmux/color/tmux-colors-solarized/tmuxcolors-dark.conf
