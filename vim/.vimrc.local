" .vimrc.local File
" Written by perok

" Default settings {
    set autowrite "  Write the old file out when switching between files.
    let mapleader = "," " Change mapleader from \ to ,
    set timeoutlen=500 "  Ever notice a slight lag after typing the leader key + command? This lowers the timeout.
    ""set nospell " Disable spellchecking?
" }
" Tab stuff
"set tabstop=2
"set shiftwidth=2
"set softtabstop=2
"set expandtab

" Indent stuff
"set smartindent

"set laststatus=2 "  Always show the status line
"set linespace=3 "  Prefer a slightly higher line height

"set splitbelow "  Split windows below the current window.

"Session settings
"set sessionoptions=resize,winpos,winsize,buffers,tabpages,folds,curdir,help

"Set up an HTML5 template for all new .html files
"autocmd BufNewFile * silent! 0r $VIMHOME/templates/%:e.tpl

" Mapping {
    " Faster shortcut for commenting. Requires T-Comment plugin
    map ,c <c-_><c-_>

    " Saves time; maps the spacebar to colon
    nmap <space> :

    " Map escape key to jj -- much faster
    imap jj <esc>

    " Shortcut for editing  vimrc file in a new tab
    "nmap ,ev :tabedit $MYVIMRC<cr>

    "Automatically change current directory to that of the file in the buffer
    " autocmd BufEnter * cd %:p:h

    " Map code completion to , + tab
    imap ,<tab> <C-x><C-o>

    " Yank text to the clipboard TODO: not working. Solution is bad idea
    " anyhow. "+ and "* are system clipboard and should be used.
    "set clipboard=unnamedplus
    noremap <leader>y "+y
    noremap <leader>yy "+yy

    " Preserve indentation while pasting text from the OS X clipboard
    noremap <leader>p :set paste<CR>:put  *<CR>:set nopaste<CR>

    "Auto-completion menu
    " set wildmode=list:longest

    "set completeopt=longest,menuone
    "inoremap <expr> <CR> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
    "inoremap <expr> <C-n> pumvisible() ? '<C-n>' :
    "  \ '<C-n><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'
    "inoremap <expr> <M-,> pumvisible() ? '<C-n>' :
    "  \ '<C-x><C-o><C-n><C-p><C-r>=pumvisible() ? "\<lt>Down>" : ""<CR>'

    "Delete all buffers (via Derek Wyatt)
    nmap <silent> ,da :exec "1," . bufnr('$') . "bd"<cr>

    "Bubble single lines (kicks butt)
    "http://vimcasts.org/episodes/bubbling-text/
    nmap <C-Up> ddkP
    nmap <C-Down> ddp

    "Bubble multiple lines
    vmap <C-Up> xkP`[V`]
    vmap <C-Down> xp`[V`]

    " easier window navigation
    nmap <C-h> <C-w>h
    nmap <C-j> <C-w>j
    nmap <C-k> <C-w>k
    nmap <C-l> <C-w>l

    " Hard-wrap paragraphs of text
    nnoremap <leader>q gqip
    " Shortcut to fold tags with leader (usually \) + ft
    nnoremap <leader>ft Vatzf
    " Opens a vertical split and switches over (\v)
    nnoremap <leader>v <C-w>v<C-w>l

" }
" Plugins {
    " Vim-airstrip {
        let g:airline_powerline_fonts=1
    " }
    " TagHighlight {
        ":call pathogen#helptags()
    " Nerdtree {
        nmap ,nt :NERDTreeToggle <enter>

        "Show hidden files in NerdTree
        let NERDTreeShowHidden=1

        " let Nerdtree work like a split explorerer.
        " http://vimcasts.org/blog/2013/01/oil-and-vinegar-split-windows-and-project-drawer/
        let NERDTreeHijackNetrw=1
    " }
    " Syntastic PHP {
        let g:syntastic_php_checkers=['php', 'phpcs', 'phpmd']
    " }
" }
" Spelling {
    "Helpeful abbreviations
    iab lorem Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.
    iab llorem Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. 

    "Spelling corrects. Just for example. Add yours below.
    iab teh the
    iab Teh The
" }
"--------------------------"
" PERSONAL SETTINGS
" -------------------------"

"For autocompletion of Snipmate plugin
let g:acp_behaviorSnipmateLength = 1

" Snipmate
:filetype plugin on

" Colors and fonts
"let g:solarized_termtrans = 1
"set background=dark
colo seoul256

" GVIM Setting {{{
if has('gui_running')
    set guioptions=aAce
    "set guifont=Menlo:h14
    "autopen NERDTree and focus cursor in new document
    autocmd VimEnter * NERDTree
    autocmd vimenter * wincmd p
else
    "set mouse=a
endif

" Source the vimrc file after saving it. This way, you don't have to reload
" Vim to see the changes.
if has("autocmd")
  autocmd bufwritepost .vimrc.local source $MYVIMRC
endif
